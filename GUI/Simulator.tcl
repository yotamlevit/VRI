#############################################################################
# Generated by PAGE version 4.22
#  in conjunction with Tcl version 8.6
#  May 17, 2019 02:55:09 PM +0300  platform: Windows NT
set vTcl(timestamp) ""


if {!$vTcl(borrow)} {

set vTcl(actual_gui_bg) #d9d9d9
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_analog) #ececec
set vTcl(actual_gui_menu_analog) #ececec
set vTcl(actual_gui_menu_bg) #d9d9d9
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) #d9d9d9
set vTcl(analog_color_p) #d9d9d9
set vTcl(analog_color_m) #d9d9d9
set vTcl(active_fg) #000000
set vTcl(actual_gui_menu_active_bg)  #ececec
set vTcl(active_menu_fg) #000000
}

# vTcl Code to Load User Fonts

vTcl:font:add_font \
    "-family Arial -size 13 -weight bold -slant roman -underline 1 -overstrike 0" \
    user \
    vTcl:font11
vTcl:font:add_font \
    "-family {Rockwell Nova Cond} -size 48 -weight bold -slant roman -underline 1 -overstrike 0" \
    user \
    vTcl:font18
#################################
#LIBRARY PROCEDURES
#


if {[info exists vTcl(sourcing)]} {

proc vTcl:project:info {} {
    set base .top42
    global vTcl
    set base $vTcl(btop)
    if {$base == ""} {
        set base .top42
    }
    namespace eval ::widgets::$base {
        set dflt,origin 1
        set runvisible 1
    }
    namespace eval ::widgets_bindings {
        set tagslist _TopLevel
    }
    namespace eval ::vTcl::modules::main {
        set procs {
        }
        set compounds {
        }
        set projectType single
    }
}
}

#################################
# GENERATED GUI PROCEDURES
#

proc vTclWindow.top42 {base} {
    if {$base == ""} {
        set base .top42
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -menu "$top.m49" -background {#8aaae5} -highlightbackground {#d9d9d9} \
        -highlightcolor black 
    wm focusmodel $top passive
    wm geometry $top 1230x1000
    update
    # set in toplevel.wgt.
    global vTcl
    global img_list
    set vTcl(save,dflt,origin) 1
    wm maxsize $top 1924 1061
    wm minsize $top 120 1
    wm overrideredirect $top 0
    wm resizable $top 0 0
    wm deiconify $top
    wm title $top "VRI - Virtual Robot Interactions"
    vTcl:DefineAlias "$top" "Simulator" vTcl:Toplevel:WidgetProc "" 1
    set site_3_0 $top.m49
    menu $site_3_0 \
        -activebackground {#ececec} -activeforeground {#000000} \
        -background {#d9d9d9} -font {-family {Segoe UI} -size 9} \
        -foreground {#000000} -tearoff 0 
    $site_3_0 add command \
        -activebackground {#ececec} -activeforeground {#000000} \
        -background {#d9d9d9} -font TkDefaultFont -foreground {#000000} \
        -label Start 
    $site_3_0 add command \
        -activebackground {#ececec} -activeforeground {#000000} \
        -background {#d9d9d9} -font TkDefaultFont -foreground {#000000} \
        -label Stop 
    $site_3_0 add command \
        -activebackground {#ececec} -activeforeground {#000000} \
        -background {#d9d9d9} -font TkDefaultFont -foreground {#000000} \
        -label {Save Current State} 
    $site_3_0 add separator \
        -background {#d9d9d9} 
    $site_3_0 add separator \
        -background {#d9d9d9} 
    $site_3_0 add separator \
        -background {#d9d9d9} 
    $site_3_0 add separator \
        -background {#d9d9d9} 
    $site_3_0 add command \
        -activebackground {#ececec} -activeforeground {#000000} \
        -background {#d9d9d9} -font TkDefaultFont -foreground {#000000} \
        -label Exit 
    canvas $top.can43 \
        -background {#2e384c} -borderwidth 2 -closeenough 1.0 -height 990 \
        -highlightbackground {#d9d9d9} -highlightcolor black \
        -insertbackground black -relief ridge -selectbackground {#c4c4c4} \
        -selectforeground {#000000} -width 1000 
    vTcl:DefineAlias "$top.can43" "canvas_sim" vTcl:WidgetProc "Simulator" 1
    label $top.lab45 \
        -activebackground {#f9f9f9} -activeforeground black \
        -background {#8aaae5} -disabledforeground {#a3a3a3} \
        -font {-family {Arial} -size 13 -weight bold -underline 1} \
        -foreground {#ffffff} -highlightbackground {#d9d9d9} \
        -highlightcolor black -text Speed: 
    vTcl:DefineAlias "$top.lab45" "speed_lable" vTcl:WidgetProc "Simulator" 1
    ttk::scale $top.tSc46 \
        -variable speed_value -orient vertical -to 100 -value 50 \
        -takefocus {} 
    vTcl:DefineAlias "$top.tSc46" "spped_scale" vTcl:WidgetProc "Simulator" 1
    label $top.lab48 \
        -activebackground {#f9f9f9} -activeforeground black \
        -background {#8aaae5} -disabledforeground {#a3a3a3} \
        -font {-family {Segoe UI} -size 10 -weight bold} \
        -foreground {#ffffff} -highlightbackground {#d9d9d9} \
        -highlightcolor black -text High 
    vTcl:DefineAlias "$top.lab48" "high_lable" vTcl:WidgetProc "Simulator" 1
    label $top.lab49 \
        -activebackground {#f9f9f9} -activeforeground black \
        -background {#8aaae5} -disabledforeground {#a3a3a3} \
        -font {-family {Segoe UI} -size 10 -weight bold} \
        -foreground {#ffffff} -highlightbackground {#d9d9d9} \
        -highlightcolor black -text Low 
    vTcl:DefineAlias "$top.lab49" "low_lable" vTcl:WidgetProc "Simulator" 1
    label $top.lab43 \
        -background {#8aaae5} -disabledforeground {#a3a3a3} \
        -font {-family {Rockwell Nova Cond} -size 48 -weight bold -underline 1} \
        -foreground {#ff0000} -highlightbackground {#ff0000} \
        -highlightcolor {#ff0000} 
    vTcl:DefineAlias "$top.lab43" "crach_lable" vTcl:WidgetProc "Simulator" 1
    label $top.lab44 \
        -background {#8aaae5} -disabledforeground {#a3a3a3} \
        -font {-family {Arial} -size 13 -weight bold -underline 1} \
        -foreground {#ffffff} -text State: 
    vTcl:DefineAlias "$top.lab44" "state_lable" vTcl:WidgetProc "Simulator" 1
    ttk::separator $top.tSe45 \
        -orient vertical 
    vTcl:DefineAlias "$top.tSe45" "TSeparator1" vTcl:WidgetProc "Simulator" 1
    ttk::separator $top.tSe46 \
        -orient vertical 
    vTcl:DefineAlias "$top.tSe46" "TSeparator2" vTcl:WidgetProc "Simulator" 1
    ttk::separator $top.tSe47
    vTcl:DefineAlias "$top.tSe47" "TSeparator3" vTcl:WidgetProc "Simulator" 1
    ttk::separator $top.tSe48
    vTcl:DefineAlias "$top.tSe48" "TSeparator4" vTcl:WidgetProc "Simulator" 1
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.can43 \
        -in $top -x 0 -y 0 -width 1000 -relwidth 0 -height 1000 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.lab45 \
        -in $top -x 1000 -y 0 -anchor nw -bordermode ignore 
    place $top.tSc46 \
        -in $top -x 1060 -y 40 -anchor nw -bordermode ignore 
    place $top.lab48 \
        -in $top -x 1020 -y 30 -width 32 -relwidth 0 -height 31 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.lab49 \
        -in $top -x 1020 -y 130 -width 28 -relwidth 0 -height 41 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.lab43 \
        -in $top -x 1010 -y 240 -width 214 -relwidth 0 -height 121 \
        -relheight 0 -anchor nw -bordermode ignore 
    place $top.lab44 \
        -in $top -x 1000 -y 200 -width 57 -relwidth 0 -height 25 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.tSe45 \
        -in $top -x 1010 -y 240 -height 120 -anchor nw -bordermode inside 
    place $top.tSe46 \
        -in $top -x 1220 -y 240 -height 120 -anchor nw -bordermode inside 
    place $top.tSe47 \
        -in $top -x 1010 -y 240 -width 210 -anchor nw -bordermode inside 
    place $top.tSe48 \
        -in $top -x 1010 -y 360 -width 210 -anchor nw -bordermode inside 

    vTcl:FireEvent $base <<Ready>>
}

set btop ""
if {$vTcl(borrow)} {
    set btop .bor[expr int([expr rand() * 100])]
    while {[lsearch $btop $vTcl(tops)] != -1} {
        set btop .bor[expr int([expr rand() * 100])]
    }
}
set vTcl(btop) $btop
Window show .
Window show .top42 $btop
if {$vTcl(borrow)} {
    $btop configure -background plum
}

